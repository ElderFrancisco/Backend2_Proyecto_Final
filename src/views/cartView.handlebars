<section id="cartView" class="flex flex-direction-column align-items-center justify-content-center padding-1">
  <link rel="stylesheet" href="/css/cart.css">
  <h1>Tu carrito</h1>
  <p id="cartId" style="display:none">{{cart._id}}</p>
  <div class="content flex justify-content-between">
    <ul id="ul-card" class="width-77vw height-70vh flex flex-direction-row wrap padding-10 margin-l-20 overflow-y-scroll border-1 border-radius-5 justify-content-start">
    {{#each cart.products}}
      <li id="li-card-{{product._id}}"
        class="li-card flex flex-direction-column justify-content-between align-items-start width-140px height-400px border-1 border-radius-5 gap-10 margin-10px padding-20">
        <h2 class="margin-0">{{product.title}}</h2>
        <p class="margin-0" >Precio: ${{product.price}}</p>
        <p class="margin-0">CÃ³digo: {{product.code}}</p>
        <p class="margin-0">Stock: {{product.stock}}</p>

        {{#if product.thumbnail}}
          <img
            id="img-card"
            src="{{product.thumbnail}}"
            alt="{{product.title}}"
            width="100px"
            height="auto"
          />
        {{else}}
          <p>Imagen no disponible</p>
        {{/if}}
        <div id="quantity" class="flex flex-direction-column align-items-center width-100">
          <h2>Cantidad</h2>
          <div class="flex justify-content-between">
            <button  class="button-quantity" onclick="removeProduct('{{product._id}}')" ><span class="q-text">-</span></button>

            <p id="card-quantity-{{product._id}}">{{quantity}}</p>
            <button class="button-quantity" onclick="addProduct('{{product._id}}')"><span class="q-text">+</span></button>

          </div>
          
        </div>
      </li>

    {{/each}}
  </ul>
  <div class="buttons width-20vw flex flex-direction-column align-items-center justify-content-center padding-10">
    <a id="volver" href="/products/" id="clear">Seguir Comprando</a>
    <button id="cart" onclick="clearCart('{{cart._id}}')" id="clear">Vaciar Carrito</button>
    <span id="pago">Metodos de pago</span>
    
    <button  onclick="createCheckoutStripe('{{cart._id}}')" id="stripe"><img  src="/images/stripe.png" width="30px" height="30px" alt=""><p id="stripeLetra">Stripe</p></button>
    
    <button id="mp" onclick="createCheckoutMercadoPago('{{cart._id}}')" id="mercadopago"><img src="/images/mercadopago.jpg" height="30px" alt=""></button>
  </div>
  </div>
  
</section>


<script>

  function createCheckoutStripe(cart) {
    fetch(`/api/payments/create-checkout/stripe/${cart}`, {
      method: 'POST'
    })
    .then(response => {
      if (!response.ok) {
          throw new Error('Error en la solicitud');
      }
      return response.json();
  })
    .then(data => {
      window.location.href = data.payload.url
    })
    .catch(error => {
      console.log('Error:', error);
    });
  }



  function clearCart(cart) {
    fetch(`/api/carts/${cart}`, {
      method: 'DELETE'
    })
    .then(response => {
      if (!response.ok) {
          throw new Error('Error en la solicitud');
      }
      return response.json();
  })
    .then(data => {
       const ul = document.getElementById('ul-card')
      
       ul.innerHTML = '';
    })
    .catch(error => {
      console.log('Error:', error);
    });
  }
  
  function addProduct(product) {
    const cart = ('{{cart._id}}');
      fetch(`/api/carts/${cart}/product/${product}`, {
        method: 'POST'
      })
      .then(response => {
        if (!response.ok) {
            throw new Error('Error en la solicitud');
        }
        return response.json();
    })
      .then(data => {
        const productsList = data.payload.products
         const productInfo = productsList.find(p => p.product === product);
        const quantityProduct = document.getElementById(`card-quantity-${product}`)
        quantityProduct.textContent = productInfo.quantity
      })
      .catch(error => {
        console.log('Error:', error);
      });
    }


     function removeProduct(product) {
    const cart = ('{{cart._id}}');
      fetch(`/api/carts/${cart}/product/${product}`, {
        method: 'DELETE'
      })
      .then(response => {
        if (!response.ok) {
            throw new Error('Error en la solicitud');
        }
        return response.json();
    })
      .then(data => {
        const productsList = data.payload.products
         const productInfo = productsList.find(p => p.product === product);
         if (!productInfo) {
          const quantityProduct = document.getElementById(`li-card-${product}`)
          quantityProduct.remove()
         }else{
          const quantityProduct = document.getElementById(`card-quantity-${product}`)
          quantityProduct.textContent = productInfo.quantity
         }
      
      })
      .catch(error => {
        console.log('Error:', error);
      });
    }
</script>