<section id="modifyProduct">
    <link rel="stylesheet" href="/css/editProduct.css">
    <div>
        <h1>Editar Producto</h1>
        <form id="editProductForm"  class="flex flex-direction-column">
            <label for="id">Id:</label>
            <input type="text" id="id" name="id" value="{{product._id}}" readonly>

            <label for="title">Título:</label>
            <input type="text" id="title" name="title" value="{{product.title}}" required>

            <label for="description">Descripción:</label>
            <input type="text" id="description" name="description" value="{{product.description}}">

            <label for="code">Código:</label>
            <input type="text" id="code" name="code" value="{{product.code}}" required>

            <label for="price">Precio:</label>
            <input type="number" id="price" name="price" value="{{product.price}}" required>

            <label for="status">Estado:</label>
            <select id="status" name="status" required>
                <option value="true" {{#if product.status}}selected{{/if}}>Activo</option>
                <option value="false" {{#unless product.status}}selected{{/unless}}>Inactivo</option>
            </select>

            <label for="stock">Stock:</label>
            <input type="number" id="stock" name="stock" value="{{product.stock}}" required>

            <label for="category">Categoría:</label>
            <input type="text" id="category" name="category" value="{{product.category}}">

            <button type="submit" >Guardar Cambios</button>
        </form>
    </div>
</section>

<script>
document.getElementById('editProductForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Evitar que el formulario se envíe de manera convencional

    // Obtener los valores del formulario
    const id = document.getElementById('id').value;
    const title = document.getElementById('title').value;
    const description = document.getElementById('description').value;
    const code = document.getElementById('code').value;
    const price = document.getElementById('price').value;
    const status = document.getElementById('status').value === 'true' ? true : false;
    const stock = document.getElementById('stock').value;
    const category = document.getElementById('category').value;

    // Crear el objeto de datos a enviar
    const data = {
        id: id,
        title: title,
        description: description,
        code: code,
        price: price,
        status: status,
        stock: stock,
        category: category
    };

    // Realizar la solicitud fetch
    fetch(`/api/products/${id}`, {
        method: 'PUT', // Utiliza PUT para actualizar el recurso
        headers: {
            'Content-Type': 'application/json' // Especifica que los datos se envían en formato JSON
        },
        body: JSON.stringify(data) // Convierte el objeto de datos a JSON
    })
    .then(response => {
        if (!response.ok) {
            if (response.status === 409) {
                alert("Ya existe un producto con ese Código.");
            } else {
                alert("Ha ocurrido un error al agregar el producto.");
            }
            throw new Error("Error en la solicitud.");
        }
        return response.json();
    })
    .then(data => {
        console.log(data);
        alert("Producto agregado exitosamente.");
        //window.location.href = `/products/${data.payload._id}`;
    })
    .catch(error => {
        console.error("Error:", error);
    });
});

</script>